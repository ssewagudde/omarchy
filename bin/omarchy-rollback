#!/bin/bash

# Omarchy Rollback Utility
set -euo pipefail

# Source common functions if available
if [[ -f ~/.local/share/omarchy/install/common.sh ]]; then
    source ~/.local/share/omarchy/install/common.sh
else
    # Fallback logging
    log_info() { echo "[INFO] $*" >&2; }
    log_success() { echo "[SUCCESS] $*" >&2; }
    log_warning() { echo "[WARNING] $*" >&2; }
    log_error() { echo "[ERROR] $*" >&2; }
fi

show_usage() {
    cat << EOF
Usage: $(basename "$0") [FILE]

Simple rollback utility - restores .backup files

EXAMPLES:
    $(basename "$0") ~/.zshrc          # Restores ~/.zshrc from ~/.zshrc.backup.*
    $(basename "$0") --list            # Lists all .backup files
    $(basename "$0") --clean           # Removes all .backup files

EOF
}

list_backups() {
    log_info "Available backup files:"
    find ~ -name "*.backup.*" -type f 2>/dev/null | head -20
}

restore_file() {
    local file="$1"
    local backup=$(find "$(dirname "$file")" -name "$(basename "$file").backup.*" -type f | sort | tail -1)
    
    if [[ -z "$backup" ]]; then
        log_error "No backup found for $file"
        return 1
    fi
    
    log_info "Restoring $file from $backup"
    cp "$backup" "$file"
    log_success "Restored $file"
}

clean_backups() {
    log_warning "This will delete all .backup files"
    read -p "Continue? (y/N): " -n 1 -r
    echo
    [[ $REPLY =~ ^[Yy]$ ]] && find ~ -name "*.backup.*" -type f -delete && log_success "Backups cleaned"
}

main() {
    case "${1:-}" in
        --list|-l) list_backups ;;
        --clean|-c) clean_backups ;;
        --help|-h|"") show_usage ;;
        *) restore_file "$1" ;;
    esac
}

main "$@"